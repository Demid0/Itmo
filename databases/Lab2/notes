ВИДЫ ПРЕДСТАВЛЕНИЙ
	- view (можно обновить, но есть нюансы)
	- materialized view (нельзя вставить и удалить данные, можно только удалить целиком)
--ЗА ЭТО МОГУТ УБИТЬ ЛУЧШЕ САМ ПОГУГЛИ --

АРХИТЕКТУРА ANSI-SPARC (трехуровневая архитектура СУБД)
	- пользовательский (представления бд)
	- концептуальный (описание данных, их связи, ограничения)
	- физический (описание как хранятся данные на диске)

ПРИНЦИП ACID (обеспечивает сохранность данных)
	atomicity - атомарность (транзакция либо выполнена, либо нет. Без промежуточных состояний)
	consistency - согласованность (успешно выполненная транзакция сохраняет согласованность бд)
	isolation - изолированность (транзакции не влияют друг на друга)
	durability - устойчивость (выполненные транзакции не откатываются из-за сбоев)


3 ЛАБА
	- 4 ПУНКТ ДЛЯ ПЕРВОЙ ЛР
	- ВСЕ ОСТАЛЬНОЕ ДЛЯ ЗАДАНИЯ РУБЕЖКИ


ДОП ЗАПРОСЫ НА 2 ЛАБУ
 Группа, фио, дисциплина, оценка - первый запрос
 Группа, фио, дисциплина, оценка, накопительная сумма (оценки) - второй запрос

ДОП НА 1 ЛАБУ
VIEW
 HUMAN.NAME, GROUP.NAME, ACTION_DESCRIPTION.DESCRIPTION WHERE ACTION_WITH_GROUP.DESCRIPTION_ID = ACTION_DESCRIPTION.ID 
 Вывести человека, группу и как они взаимодействуют



WITH RECURSIVE TEMP (ИД, ОТД_ИД, КОРОТКОЕ_ИМЯ, ПУТЬ) AS (
	SELECT T1.ИД, T1.ОТД_ИД, T1.КОРОТКОЕ_ИМЯ, CAST (T1.ИД AS VARCHAR(50)) AS ПУТЬ 
	FROM Н_ОТДЕЛЫ AS T1 
	WHERE T1.ОТД_ИД IS NULL 
	UNION
	SELECT T2.ИД, T2.ОТД_ИД, T2.КОРОТКОЕ_ИМЯ, CAST (TEMP.ПУТЬ || ' -> ' || T2.ИД AS VARCHAR(50)) 
	FROM Н_ОТДЕЛЫ AS T2 
	JOIN TEMP ON TEMP.ИД = T2.ОТД_ИД
)
SELECT КОРОТКОЕ_ИМЯ, ПУТЬ 
FROM TEMP;



-5 задание из рубежки сделать для первой лабы
-перерисовать даталогическую модель для рубежки
-4 лаба
